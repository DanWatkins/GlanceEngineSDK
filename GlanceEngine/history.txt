Glance Engine - (C) 2010-2013 Daniel L. Watkins

This is a log of everything (most of what happended, the main point) added, changed, or fixed related to the entire engine (Glance Engine, Glance Engine, Glance Engine, or Glance Engine, and GlancePhysics)


---------------------------------------------------------------------------------------------------
 ###### v0.3.0 (April 23, 2013 - present)
 
CheckBox and Slider now properly send messages to listeners (4/30/2013)
Added sendMessageToListener calls in the buttons, checkbox, edit box, slider, and scroll bar (4/29/2013)
Ordered every header and source pair in GlanceEntity so the header file's method ordering is the same in the corresponding source (4/28/2013)
Fixed ElementListener and State name clashes by using "enum class" requires C++11 (4/27/2013)
Added base for gui::ElementListener delegate class (4/26/2013)
[ADDED] Engine version is just a single string now. Also added SDK version string (4/23/2013)
[ADDED] Collidable tiles such as water are giving a massive height (500px). This is just a temporary solution (4/23/2013)


---------------------------------------------------------------------------------------------------
 ###### v0.25.2 to v0.27.2 (March 3, 2013 - April 22, 2013)

[ADDED] Panel gui element (v0.27.0) (4/21/2013)
[ADDED] Selected menu can be cleared for ContextMenus (v0.27.0) (4/21/2013)
[ADDED] Globally overloaded + operator for String so now someString+1254 is a valid operation without having to write someString+ToString(1254) (v0.27.0) (4/21/2013)
[FIXED] Console now has an embedded gui::Root object inside of it (v0.26.8)
[FIXED] Issue with ScrollBar I was to lazy to test for in the last iteration (v0.26.8)
[ADDED] ScrollBar adjusts the size of its knob according to its virtual scroll size and viewable area (v0.26.6)
[FIXED] When making stray clicks outside a ComboBox while it is open and has a selection will not nullify the selection (v0.26.4)
[FIXED] gui::Element::Remove methods are better functioning and there is a way to schedule elements to be removed outside of an update (v0.26.2)
[ADDED] Close button to gui::DialogBox that is optional, and does actually close the box (v0.26.2)
[FIXED] gui::Drager is by default not solid so it does not come into focus and cover other elements (v0.26.2)
[ADDED] Background for gui::ComboBox (v0.26.0)
[FIXED] gui::ComboBox now behaves properly (v0.25.8)
[ADDED] Line drawing class (v0.25.6)
[ADDED] Rectangle drawing class and a Shape base class (v0.25.4)
[ADDED] Base of gui::ComboBox (v0.25.2)


---------------------------------------------------------------------------------------------------
 ##### v0.20.2 to v0.25.0 (November 14, 2012 - March 3, 2013)

[FIXED] gui::CheckBox actually draws its caption, and the side it is drawn on can be specified (v0.25.0)
[ADDED] gui::Text can now be left or right aligned (v0.24.8)
[ADDED] ListBox Cell objects can store uniqe identifiers (v0.24.6)
[CHANGED] Removed direct template entity list access in the EntityManager and improved external iterating of entities from the internal list (v0.24.6)
[CHANGED] How the version is managed so there are no name clashes with the new ge::gre namespace for the resource editor (v0.24.5)
[ADDED] gui::Drager now has built in bounds checking, so gui::ScrollBar and gui::Slider don't need to do it on their own (v0.24.4)
[FIXED] GUI ordering issue with selecting elements (v0.24.2)
[FIXED] Sprite class now recalculates the clipping region whenever the image is set in SetImage(). This fixes improperly sized drawings (v0.24.2)
[ADDED] Improved ListBox and Cell classes so now a list of cells can be scrolled up and down with a single scrollbar on the right. Cells can also be selected (v0.24.0)
[ADDED] Begining of the ListBox and Cell (v0.23.8)
[ADDED] gui::Picture can now load images from memory (v0.23.8)
[ADDED] ScrollBar class that can span horizontally and vertically without instantiating a different object (v0.23.6)
[ADDED] Window can render its own custom cursor loaded from file when the cursor is within the window (v0.23.4)
[FIXED] ToBool properly interperets numberic values in strings. So "0" means false, "1" or "309275" means true, and "jl2fj233423ljkj" means false (v0.23.2)
[ADDED] Window now loads its own video configuration file based on a unique identifier. The current settings can be written whenever desired (v0.23.2)
[ADDED] Window can now have its video settings changed while running (v0.23.0)
[FIXED] Went back to custom sorting algorithm because std::sort() had issues and actually was not faster (v0.22.8)
[FIXED] Entity sorting algorithm now uses the std::sort() function to sort way faster (v0.22.6)
[FIXED] Non-moving bodeis are identified more efficiently in the physics system (v0.22.4)
[FIXED] Finished up the partitioning optimization (v0.22.2)
[ADDED] Physics Environment can partition all the bodies into small groups (v0.22.0)
[CHANGED] The term "depth" has been replaced with "length" when dealing with 3d sizes (v0.22.0)
[FIXED] Tile group bodies now are correctly .000000000001+height below ground level so objects can be set at z positino 0.0 and not collide with the ground (v0.21.8)
[CLEANED] Some random stuff in the physics code (v0.21.8)
[ADDED] When creating the tile map, common tiles are put into groups that share single collision bodies (v0.21.6)
[ADDED] World system now keeps entities moving at a consistent speed regardless of the overall framerate (v0.21.4)
[ADDED] Update rate calculation method and tracker to Window (v0.21.4)
[ADDED] Warning for duplicate tab page names (v0.21.4)
[CHANGED] Animation stances are placed in the stance namespace now (v0.21.4)
[FIXED] Only the active tab page's children will be drawn (v0.21.2)
[ADDED] GUI elements can be set to draw or not. Their children will not be drawn if the flag is false (v0.21.2)
[ADDED] TabBar and TabPage to the gui (v0.21.0)
[ADDED] Slider to the gui (v0.20.8)
[ADDED] ButtonImage to the gui (v0.20.6)
[ADDED] Context menus now pop up properly when their right click region is clicked (v0.20.4)
[FIXED] Again, the shimmering/jigling of entities placed at partial pixel positions by also making the camera's draw position round down (v0.20.4)
[CHANGED] MenuBar and ContextMenu return WeakPtr<>s to their sub-menus from their AddMenu() methods (v0.20.2)
[FIXED] Caption now appears on DialogBox (v0.20.2)
[ADDED] Camera now follows on the z-axis (v0.20.2)


---------------------------------------------------------------------------------------------------
 #### v0.15.2 to v0.20.0 (July 31, 2012 - November 14, 2012)

[FIXED] Animation was not getting the correct offset due to an issue with accessing elements in an std::map (v0.20.0)
[ADDED] AnimationManager::AddAnimation() now checks to make sure there is not already another animation with the same type (like is it walking, standing, or whatever) (v0.20.0)
[ADDED] A GetRows method to Sprite (v0.20.0)
[ADDED] Type check for AssetManager::GetImage() so it wont return another Asset casted to an Image (v0.20.0)
[FIXED] Various uninitialized member varialbles (v0.20.0)
[CHANGED] Abandoned MSVC10 project and created MSVC9 and MSVC11 projects. Both should be maintained every iteration along with the CB project for Linux (v0.19.6)
[ADDED] When loading a world a second time, the systems clear out stuff like entities and physics bodies from the previous world (v0.19.4)
[ADDED] Ability to set the checked state of a check box (v0.19.2)
[FIXED] Quirks with ContextMenu (v0.19.2)
[FIXED] MenuBar properly creates and manages embedded ContextMenus (v0.19.2)
[FIXED] Sweep box creation that caused fast moving objects to pass through other objects in certain directions (v0.19.0)
[FIXED] A major issue with the AABB collision resolution where it was hard to know if a Z or XY resolution should be performed. Oh man. Almost blew my brains out over this (v0.18.8)
[ADDED] GlanceAudio library to handle audio (v0.18.6)
[ADDED] SoundBuffer class to asset system (v0.18.6)
[CHANGED] Renamed the Circle physics body to Cylinder (v0.18.4)
[ADDED] Procedural shadows for entities (v0.18.4)
[FIXED] When copying a template body, the position of all connected bodies is set properly (v0.18.2)
[FIXED] There were residual connected bodies when creating a new body from a template body (v0.18.2)
[FIXED] Z-axis collision resolution was getting screwey with XY-resolution, so they have been segregated (v0.18.0)
[FIXED] Bodies don't get stuck on the other bodies they rest on when moving (v0.18.0)
[CHANGED] Subdivided Environmet.cpp into smaller source file, but kept Environment.cpp for general stuff (v0.17.8)
[ADDED] Gravity to the physics system (huge understatement) there are a lot of issues though (v0.17.8)
[ADDED] Sorting on the z-axis (v0.17.6)
[FIXED] Encapsulation and naming issues (v0.17.6)
[FIXED] Sprite only calculates the clipping region when it needs to; not every draw call (v0.17.4)
[FIXED] A bunch of random encapsulation issues denoted by TODO (v0.17.4)
[CHANGED] All "LoadSomething" methods that loaded a file now say "LoadSomethingFromFile" to indicate they take a filename or filepath (v0.17.2)
[CHANGED] Parameters named "filepath" refer to a path relative to the application, and "filename" refers to just a file's name and the extension (v0.17.2)
[ADDED] AssetManager can return Images directly, but it doesn't actually check if they are images (v0.17.2)
[FIXED] Copies of template entities would all control the same Animations because deep copies of the animations were not being made (v0.17.0)
[ADDED] Image offsets for Animation (v0.17.0)
[ADDED] Entity switches between walking and standing animations based on velocity (v0.16.8)
[ADDED] Rotation is maintained when switching between animations in the AnimationManager (v0.16.8)
[ADDED] Entity's current animation's rotation is set after the rotation for the Entity is calculated (v0.16.6)
[ADDED] Rotation member to Entity class that represents the current rotation of the entity in degrees (0-east, 90-north) (v0.16.6)
[ADDED] Functional animation manager that is integrated with the world system (v0.16.4)
[ADDED] Started the animation manager (v0.16.2)
[ADDED] Animations are now loaded from animation files (.as) (v0.16.2)
[ADDED] When an animation switches the current rotation, the position in the loop is maintained (v0.16.2)
[ADDED] Animation class to handle animating with rotations (v0.16.0)
[FIXED] Text over-run issue with the edit box (v0.15.8)
[FIXED] Focus was not properly being set when Element hierarchies were 2 levels or more deep (v0.15.8)
[ADDED] Command system with parameters to the Console (v0.15.6)
[ADDED] Root::Create methods return a WeakPtr<T> to the element created (v0.15.4)
[ADDED] Entities are sorted every loop so that entities with a higher y-position appear on top of other entities with lower y-coordinates (only noticable when entities are directly in front of other entities) (v0.15.4)
[FIXED] When calculating minimum translation to project out of a collision, the direction on each axis was not taken into account (v0.15.2)
[ADDED] Functions in Glance Engine for testing if a double is less than another, or equal, or both with taking a small margin of error into consideration for floating-point inaccuracy (v0.15.2)
[FIXED] gui::EditBox could not have its captin set before it was officially initialized internally (v0.15.2)


---------------------------------------------------------------------------------------------------
 ### v0.10.2 to v0.15.0 (April 17, 2012 - July 31, 2012)

[CHANGED] Entities can have multiple physical bodies that all move in unison (v0.15.0)
[FIXED] When creating an entity from a template entity name that does not refer to an actual template entity, nothing crashes! (v0.15.0)
[ADDED] Resereved ids for undefined entities (-1) and tempalte entities (-2) (v0.15.0)
[CHANGED] Actors and Objects draw their images with proper anchor offsets (v0.15.0)
[NOTE] Height is now associated with the z-axis (vertical), and depth is now associated with the y-axis. It is counterintuitive at first, but it really makes sense (v0.14.8)
[ADDED] Pseudo-3D support for GlancePhysics. All depending code (GlanceEntity and Glance Engine) uses 0.0 for all z values (v0.14.8)
[FIXED] Angle wrap around that was intended for degrees, but was actually processing for radians (v0.14.6)
[ADDED] 3D vector class (v0.14.6)
[FIXED] Rendering rounding (double to pixels (int)) thing that made objects look like they were wobling around when the camera moved diagonally (v0.14.4)
[ADDED] Enumeration for the id values of integrated elements (v0.14.4)
[ADDED] Overloaded Root created methods that allowed for the parent to be specified by a WeakPtr<Element> instead of an id value (v0.14.4)
[ADDED] Reduced code bloat in the Root create methods by implementing a method Root::_ProcessNewElement() (v0.14.4)
[FIXED] Implemented a Element::_GetAsWeakPtr() method because if an integrated element needs a WeakPtr<> for itself, but it has a negative id, it can get confused for when searching the entired hierarchy (v0.14.4)
[ADDED] Base for ListBox gui element (v0.14.4)
[CLEANED] Removed unesssesary occurences of ge:: that were from left over from the old LibHailex hx:: (I think I replaced all occurences of hx with ge at one point?) (v0.14.4)
[ADDED] Wrapper over the std::tr1::dynamic_pointer_cast<T>() to inline DynamicPtrCast<T>() (v0.14.2)
[CHANGED] The height of a menu bar is fixed (it cannot be set in the CreateMenuBar() method (v0.14.2)
[ADDED] MenuBar gui element to act as a dock for a bunch of ContextMenus (v0.14.0)
[CHANGED] All GlanceX projects are grouped into a directory called "GlanceEngine", and all lib output goes into the regular Lib directory (no MSVC10 or CodeBlocks sub directories because .lib and .a is enough diserntion) (v0.13.8)
[CHANGED] Renamed every source file to use initial-capitalized mixed case instead of lower case with underscores (v0.13.8)
[CHANGED] Made most methods of Element protected to improve encapsulation. This required the use of a lot of friend relationships though (v0.13.6)
[ADDED] ContextMenu element to the gui (v0.13.4)
[ADDED] DialogBox element to the gui. (v0.13.2)
[ADDED] Drager element to the gui which automatically picks up click-and-drag events and moves the parent accordingly (v0.13.2)
[ADDED] Functional caret to the EditBox (v0.13.0)
[FIXED] Put a bounds check in String::Remove(unsinged, unsigned) to that the second parameter has to be larger than the first (v0.13.0)
[REWROTE] Drop-down console. Only simple coloring, toggling, and user input (v0.12.8)
[FIXED] SpriteFrame can load images from file again (v0.12.8)
[CLEANED] Formatted all the code in the engine to use proper commments and block structure. (v0.12.6)
[FIXED] Went through every class in the engine (except Glance Engine which already did this for) and ensured that it met "good class design" specifications (v0.12.4)
[CHANGED] Seperated the entity system part of Glance Engine into a new library GlanceEntity (v0.12.2)
[CHANGED] Removed the default font system in Window, and put it in Root (v0.12.0)
[CHANGED] Seperated the rendering system part of Glance Engine into a new library GlanceRender2D. (v0.11.8)
[CHANGED] Seperated the asset part of Glance Engine into a new library GlanceAsset. Also removed a tight coupling between FrameImage and SpriteFrame (v0.11.6)
[FIXED] Went through every class in Glance Engine and ensured that it met "good class design" specifications" (v0.11.4)
[CHANGED] Replaced all doubles that represented size metrics (width and height) with unsigned ints (v0.11.2)
[CHANGED] Replaced all unnecessary floats in the rendering system (Sprites and all) with integers (v0.11.2)
[CHANGED] Changed Vector2D to be templated. This allows for a wider range/more practical use (like screen coordinates don't need doubles) (v0.11.2)
[CHANGED] Merged the hx namespace into ge, and renamed Libhailex as Glance Engine (v0.11.0)
[ADDED] IsNumeric() to String so it is possible to tell if a String is only numeric (including . and -). A range can be specified to consider only part of it (v0.11.0)
[ADDED] ProgressBar GUI element (v0.11.0)
[ADDED] HasFocus feature to GUI so only one element can have focus (or no element) at any moment (v0.10.8)
[FIXED] Unwanted recursion with the UpdateScreenPos() method in Element that would cause the update to go all up the tree and then back down. This can be disabled with a bool parameter (v0.10.8)
[ADDED] RemoveLast method to String (v0.10.8)
[ADDED] GetTextEntered() method to Input so systems such as the Console and EditBox can display the text entered by the user (v0.10.8)
[ADDED] EditBox element to let the user enter text into a box (v0.10.8)
[FIXED] SpriteFrame did not initialize the breaks to 0, so when it was used without a caption the top bar was screwed up (v0.10.8)
[ADDED] Break/gap feature in SpriteFrame so that it will not render the top bar so GroupBox can render a text caption without an ugly bar behind it (v0.10.6)
[REWROTE] Font class to use a custom bitmap font rendering system instead of SFML's font system which can be more accurate in measuring height (and is faster) (v0.10.6)
[CLEANED] Entire GUI system fixing many small bugs and bad techniques (v0.10.4)
[ADDED] GroupBox GUI element with a text caption inthe top left (v0.10.4)
[ADDED] Projectile launching method for world::Weapon (v0.10.2)
[FIXED] Switched many instances of SharedPtr<Body> to WeakPtr<Body> because there was no reson for certain systems to take ownsership of the data (v0.10.2)
[ADDED] physic::Body and world::Object can now have "endless" velocity which means their velocity is not zeroed every frame (v0.10.2)


---------------------------------------------------------------------------------------------------
 ## v0.05.4 to v0.10.0 (December 13, 2011 - April 17, 2012)

[FIXED] Streamlined checking for valid id's and parents in the GUI element creation methods under Root class. (v0.10.0)
[ADDED] CheckBox GUI element with support for disabled and non-disabled states (v0.10.0)
[FIXED] All compiler warnings on level 4 for all projects (v0.09.8)
[CLEANED] io system now has a consistent parameter passing system (all path modification functions return a String instead of taking a reference) (v0.09.8)
[CHANGED] Replaced most instances of std::string with String because it is more consistent (v0.09.8)
[CHANGED] Assets for GUI elements are shared using an AssetManager in the Root (v0.09.6)
[ADDED] + operator to String class (v0.09.6)
[REMOVED] Error handling for SpriteFrame image loading because SFML already handles error messages for them (v0.09.6)
[FIXED] ButtonCaption now releases when the left mouse button is released, not when the cursor is outside of the button's rectangle (v0.09.6)
[ADDED] ButtonCaption elements now center captions correctly (v0.09.6)
[ADDED] Ammo and Weapon subclasses derived from Object. Also introduced new serialization for them as well (v0.09.4)
[ADDED] Released state for buttons (v0.09.2)
[FIXED] PostInit() was being called in the Init() method before elements were added to the Root. This means any integrated elements could not link with them in PostInit() (v0.09.2)
[ADDED] Static text to the GUI (v0.09.2)
[FIXED] Inventory system had issues with cycling to the next active object after dropping stuff (v0.09.0)
[FIXED] Bodies where not being considered active or inactive properly in the physics system (v0.09.0)
[CLEANED] Organized environment.h and environment.cpp (v0.09.0)
[CHANGED] Separated part of physics::Environment::Update() into two private methods to manage collision for individual Body objects. The methods are _ManageCollisions_Std() and _ManageCollisions_Inc(). This cleans up the Update() method a lot (v0.09.0)
[ADDED] Inventory grouping. Objects of the same template are grouped. If an object is not supposed to be combined, it will be put into its own group (v0.08.8)
[ADDED] Active object to the inventory system. The active object can also be cycled to the next object in the system (v0.08.8)
[FIXED] Inventory system won't add objects if they are already in the system (v0.08.8)
[ADDED] Some tweaks to the physics engine: inactive state for Body objects and host id value for referencing an entity that uses a Body (v0.08.6)
[ADDED] Entity::ReactToCollision() virtual method that lets an entity take special action when it collides with certain things (v0.08.6)
[ADDED] Basic structure for the inventory system (v0.08.6)
[ADDED] Object subclass from Entity (v0.08.6)
[ADDED] The Root gui manager processes the position and state of the mouse, then lets the top-most element where the cursor is know about the state by sending a message using the virtual Element::SendMessage() method (v0.08.4)
[CHANGED] Renamed Image to Picture because it was conflicting with Image (v0.08.2)
[REWROTE] The asset manager to use raw pointers instead of shared_ptr<> because it was too bloated (v0.08.2)
[FIXED] GUI elements are now properly aligned after they are created (v0.08.0)
[ADDED] ButtonCaption GUI element (v0.08.0)
[ADDED] New DebugStream class and global object (oh man, a global?) (v0.07.8)
[ADDED] Image GUI element (v0.07.8)
[REWROTE] The GUI main system (v0.07.8)
[FIXED] String can now take assignments to const char *(v0.07.8)
[FIXED] When a Body would slide horizontally going right on statically aligned bodies, it would get hung upon the crack because the distance priority was using distance from the upper left corners of bodies; not the centers (v0.07.6)
[CLEANED] The whole physics system and put the physics code in a separate static library, GlancePhysics (v0.07.6)
[ADDED] The incremental movement for objects moving excessively fast is now accurately calculated and applied (v0.07.6)
[ADDED] Entity template files can specify the size and type of their Body (v0.07.6)
[ADDED] Sweep test for objects that move faster than the @mMaxVelocityStep for a physics:Environment. It will move an object traveling "too-fast" in increments of a hard-coded value of 1/8 its original velocity 8 times (v0.07.4)
[ADDED] For each Body, every collision found for it is sorted from closest to farthest from the Body (v0.07.4)
[FIXED] Bug where there would randomly be 1px gaps between tiles because of a double to int truncation (v0.07.4)
[ADDED] Tile template data to the tileset file and class (v0.07.4)
[CHANGED] Moved the physics environment from EntityManager up to World because other system embedded in World need access to it, this way is more efficient (v0.07.4)
[ADDED] Configuration file cn now be loaded. Added VSync support. It has some issues though. Plan to reimplement custon framerate-capper (v0.07.2)
[ADDED] AABB to AABB collision handling (v0.07.0)
[ADDED] Collision managment system for physics::Environment (v0.07.0)
[ADDED] Integrated a physics Environment into the whole entity system. (v0.07.0)
[CHANGED] Entity class uses private methods that only EntityManage and EntityLoader (friends) can use because it is dangerous for other systems to interface with the methods. (v0.07.0)
[CHANGED] Removed Unit class because it is unnessesary, lol (v0.07.0)
[ADDED] Unit class in between Entity and Actor. A Unit contains information about physics, and has a SharedPtr<Body> that points to a Body in a physics Environment (v0.06.7)
[ADDED] Basic shell for the physics system. (v0.06.7)
[CHANGED] Player and Camera classes reference target entities by using weak_ptr<>. Now, when an entity is removed from the manager, the shared_ptr<Actor> in them doesn't keep it in RAM (v0.06.7)
[FIXED] Lingering bug in the creation of entities from template entities. Also, player in World was a shared_ptr for some reason (v0.06.7)
[FIXED] Converted everything to properly use the tr1::shared_ptr. I was incorrectly using weak_ptr in conjunction with shared_ptr (v0.06.4)
[ADDED] Beginning player class (v0.06.4)
[ADDED] Camera now can follow it's target if the target is valid (v0.06.0_LINUX_PORT)
[ADDED] Ported to Linux and the whole project tree works in CodeLite (v0.06.0_LINUX_PORT)
[ADDED] Drop down console. No input yet (v0.06.0)
[FIXED] All Sprite variants interface with Window instead of sf::Window (this makes the rest of the enine more API-independent) (v0.06.0)
[ADDED] Code::Blocks Linux support. It compiles and runs on Linux Mint 12, but it crashes the entire system! (v0.05.8)
[ADDED] Camera can render the map (v0.05.8)
[CHANGED] Remade project tree for MSVC10 and added MSVC9 support (v0.05.8)
[ADDED] Map class. World loader now loads map data from the world file. (v0.05.6)
[ADDED] Tileset class to manage the tilesheet image and it's accompanying properties. Loads info from a tileset file (*.ts) (v0.05.6)
[FIXED] In Sprite::Draw(int, int), @ny was assigned to "mSprite.GetPosition().y+x" which made no sense, so it was changed to "mSprite.GetPosition().y+y" (v0.05.6)
[ADDED] Camera class to visualize wolrds. Only renders entities (no map yet, duh). It can be assigned to any window, but the drawback is that it tells each entity what window to draw to every frame #slowish_idk (v0.05.6)
[ADDED] WorldLoader to load world files (v0.05.4)
[ADDED] World class to manage entire levels (entity manager, future map system, and an asset manager) (v0.05.4)
[ADDED] Subclassed world::Actor from world::Entity and gave it can load an image resource from the host world's asset manager (v0.05.4)
[ADDED] Sprite can now have it's sf::Sprite's image pointer set easily with Sprite::SetSpriteImage(Image *image) (v0.05.4)


---------------------------------------------------------------------------------------------------
 # v0.00.0 to v0.05.0 (September 24, 2011 - December 13, 2011)

[CHANGED] Renamed the Engine class to Window because that makes more sense. Also, a Window can now have its background color set (0.05.0)
[ADDED] Base framework for the entity system (manager, entity base class, serilization) (v0.05.0)
[ADDED] SpriteFill class to tessellate a single sprite in an area (v0.04.6)
[ADDED] GroupBox gui element (v0.04.6)
[ADDED] Timer class to keep track of time (v0.04.6)
[ADDED] Wrapping feature for Text so it can wrap its text inside of its dimensions defined by mWidth and mHeight (v0.04.6)
[ADDED] Progressbar element (v0.04.3)
[ADDED] Font loader system in the Engine class so that every font available in the default font folder is loaded (v0.04.3)
[ADDED] io::GetFilesInDirectory() to make it easy to get just files in a directory, as well as a certain type of file (v0.04.3)
[FIXED] Some code with retrieving elements and protecting the integrated ones (v0.04.3)
[ADDED] ButtonCaption (v0.04.3)
[CLEANED] Glance Engine, Glance Engine, and Glance Engine (v0.04.0)
[ADDED] Static Text gui element (v0.04.0)
[ADDED] Color class that holds an abstraction over the sf::Color struct. This makes the enigne more API independant (v0.04.0)
[ADDED] CheckBox gui element (v0.04.0)
[CHANGED] ButtonImage now uses sprite frames (v0.03.8)
[ADDED] SpriteFrame class which is a sprite composed of 9 sub-sprites. Used for scalable-interface elements (v0.03.8)
[ADDED] Buttons do not get "clicked on" when the mouse was clicked outside and then dragged in, only if it was initially clicked inside it (v0.03.8)
[CHANGED] GUI system does not make use of SmartPointers because it was more complicated than needed (v0.03.4)
[ADDED] Rect class to Glance Engine which can test for intersections between two rectangles (v0.03.4)
[ADDED] Button gui element (v0.03.4)
[ADDED] Layering and message system for the gui (v0.03.4)
[FIXED] A release build would have issues with the window being closed right-away because events weren't being pumped correctly (v0.03.0)
[ADDED] Base GUI engine and icon element (v0.03.0)
[CHANGED] Engine is now composed of 4 static libraries and 1 client application (v0.03.0)
[ADDED] AABB struct that test for intersection with points (v0.02.2)
[ADDED] Color class to keep the engine separate from sf::Color. The class can convert to sf::color with Color::GetSF() (v0.02.2)
[ADDED] Hailex Markup Language parser for relatively easy data file input from text based files (v0.02.0)
[ADDED] DebugFile class for outputting info to files easily (v0.02.0)
[ADDED] Font rendering and loading (v0.02.0)
[ADDED] Sprite rendering system (v0.02.0)
[ADDED] Replace and erase functions to String (v0.01.6)
[ADDED] Some more functionality to the io namespace (v0.01.6)
[ADDED] Asset manager class and helper classes (v0.01.6)
[ADDED] Some extra functionality to the string class (v0.01.0)
[FIXED] String::Find() had some out of bounds issues that showed up on Linux (v0.01.0)
[IMPORTED] String class from the last GlanceEngine (v0.01.0)
[ADDED] Filesystem navigator helper functions and classes inside io{} (v0.01.0)
[ADDED] Various helper functions in the ext namespace (v0.00.6)
[ADDED] Base input system (v0.00.4)
[ADDED] Base engine structure (v0.00.2)